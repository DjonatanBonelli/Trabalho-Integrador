{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\djona\\\\Programa\\xE7\\xE3o\\\\Trabalho Integrador\\\\C\\xF3digo-Fonte\\\\Frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport axios from 'axios';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n//import Link from '@mui/material/Link';\n//import Grid from '@mui/material/Grid';\nimport { Alert, Box, Button, Snackbar, Stack, TextField, Typography, Container, Checkbox, FormControlLabel, CssBaseline, Avatar } from \"@mui/material\";\n\n//import { createTheme, ThemeProvider } from '@mui/material/styles';\n\n//const defaultTheme = createTheme();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n  const [email, setEmail] = React.useState(\"\");\n  const [passwd, setPasswd] = React.useState(\"\");\n  const [openMessage, setOpenMessage] = React.useState(false);\n  const [messageText, setMessageText] = React.useState(\"\");\n  const [messageSeverity, setMessageSeverity] = React.useState(\"success\");\n  async function enviaLogin(event) {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"/login\", {\n        email: email,\n        password: passwd\n      });\n      console.log(response);\n      if (response.status >= 200 && response.status < 300) {\n        // Salva o token JWT na sessão\n        localStorage.setItem(\"token\", response.data.token);\n        // seta o estado do login caso tudo deu certo\n        props.onLogin();\n      } else {\n        // falha\n        console.error(\"Falha na autenticação\");\n      }\n    } catch (error) {\n      console.log(error);\n      setOpenMessage(true);\n      setMessageText(\"Falha ao logar usuário!\");\n      setMessageSeverity(\"error\");\n    }\n  }\n  function handleCloseMessage(_, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenMessage(false);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'white',\n        p: '2rem',\n        borderRadius: '2rem',\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: enviaLogin,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"passwd-input\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 24\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"QulqM1ECJeSCo5C2iv4ynMzqTUE=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","axios","LockOutlinedIcon","Alert","Box","Button","Snackbar","Stack","TextField","Typography","Container","Checkbox","FormControlLabel","CssBaseline","Avatar","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","useState","passwd","setPasswd","openMessage","setOpenMessage","messageText","setMessageText","messageSeverity","setMessageSeverity","enviaLogin","event","preventDefault","response","post","password","console","log","status","localStorage","setItem","data","token","onLogin","error","handleCloseMessage","_","reason","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","bgcolor","p","borderRadius","marginTop","display","flexDirection","alignItems","m","variant","onSubmit","noValidate","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","control","value","color","mb","_c","$RefreshReg$"],"sources":["C:/Users/djona/Programação/Trabalho Integrador/Código-Fonte/Frontend/src/components/Login.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport axios from 'axios';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n//import Link from '@mui/material/Link';\r\n//import Grid from '@mui/material/Grid';\r\nimport {\r\n\tAlert,\r\n\tBox,\r\n\tButton,\r\n\tSnackbar,\r\n\tStack,\r\n\tTextField,\r\n  Typography,\r\n  Container,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  CssBaseline,\r\n  Avatar\r\n} from \"@mui/material\";\r\n\r\n//import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n//const defaultTheme = createTheme();\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = React.useState(\"\");\r\n\tconst [passwd, setPasswd] = React.useState(\"\");\r\n\r\n\tconst [openMessage, setOpenMessage] = React.useState(false);\r\n\tconst [messageText, setMessageText] = React.useState(\"\");\r\n\tconst [messageSeverity, setMessageSeverity] = React.useState(\"success\");\r\n\r\n\tasync function enviaLogin(event) {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post(\"/login\", {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: passwd,\r\n\t\t\t});\r\n\t\t\tconsole.log(response);\r\n\t\t\tif (response.status >= 200 && response.status < 300) {\r\n\t\t\t\t// Salva o token JWT na sessão\r\n\t\t\t\tlocalStorage.setItem(\"token\", response.data.token);\r\n\t\t\t\t// seta o estado do login caso tudo deu certo\r\n\t\t\t\tprops.onLogin();\r\n\t\t\t} else {\r\n\t\t\t\t// falha\r\n\t\t\t\tconsole.error(\"Falha na autenticação\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetOpenMessage(true);\r\n\t\t\tsetMessageText(\"Falha ao logar usuário!\");\r\n\t\t\tsetMessageSeverity(\"error\");\r\n\t\t}\r\n\t}\r\n\r\n  function handleCloseMessage(_, reason) {\r\n\t\tif (reason === \"clickaway\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetOpenMessage(false);\r\n\t}\r\n\r\n  return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            bgcolor: 'white',\r\n            p: '2rem',\r\n            borderRadius: '2rem',\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={enviaLogin} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"passwd-input\"\r\n              \r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}